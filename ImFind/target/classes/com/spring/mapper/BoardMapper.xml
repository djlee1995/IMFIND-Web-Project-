<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.mapper.EJ.BoardMapper">

	<insert id = "itemInsert" >
	insert into LostPost 
	(Lost_Title, 
	Lost_Content, 
	Lost_Up_File,
	Lost_Item, 
	Lost_Re_Date, 
	Lost_Date, 
	Lost_Loc, 
	Lost_Pay,
	Id,
	PayCode)values 
	(#{Lost_Title}, 
	#{Lost_Content}, 
	#{Lost_Up_File},
	#{Lost_Item}, 
	sysdate, 
	#{Lost_Date}, 
	#{Lost_Loc}, 
	#{Lost_Pay},
	#{Id},
	#{PayCode})
	</insert>
	 
	 <select id="getPayMember" resultType="com.spring.imfind.el.EJ.MemberVO">
	 SELECT id, Name, Contact, Email from Member 
	 WHERE id=#{id}
	 </select>
	 
	 <insert id = "insertPay" >
	 insert into Pay 
	 (PayCode, 
	 Pay_Amount, 
	 Pay_State, 
	 Pay_Date,
	 Id)values 
	 (#{PayCode}, 
	 #{Pay_Amount}, 
	 #{Pay_State},
	 #{Pay_Date},
	 #{Id})
	 </insert>
	 
	 <update id = "updatePay" parameterType="PayVO">
		 update Pay set Pay_State = #{Pay_State} where Id=#{Id} AND PayCode=#{PayCode}
	 </update>
	
 	 <insert id = "petInsert" >
	 insert into PetPost 
	 (Pet_Title, 
	 Pet_Content, 
	 pet_Name, 
	 pet_Re_Date, 
	 pet_LostDate, 
	 pet_Up_File,
	 pet_Loc, 
	 pet_Pay,
	 Id,
	 PayCode)values 
	 (#{pet_Title}, 
	 #{pet_Content}, 
	 #{pet_Name}, 
	 sysdate, 
	 #{pet_LostDate}, 
	 #{pet_Up_File},
	 #{pet_Loc}, 
	 #{pet_Pay},
	 #{Id},
	 #{PayCode})
	 </insert>
	 <!-- 여기서 동적쿼리문으로 조건문 처리  -->
	 <insert id="commentInsert" parameterType="LostComVO">
        <selectKey keyProperty="Com_Num" order="BEFORE" resultType="int">
            select nvl(max(Com_Num), 0)+1 from Re_Comment
        </selectKey>  
          insert into Re_Comment (Com_Num, Lost_PostNum, Com_Content, Id, Com_Date, Secret_Com)
          values(#{Com_Num},#{Lost_PostNum},#{Com_Content},#{Id},sysdate,#{Secret_Com})
     </insert>
    
     <select id ="commentList" parameterType="int" resultType="LostComVO">
      select * from Re_Comment where Lost_PostNum = #{Lost_PostNum} order by Com_Num desc
     </select>
	 
	 <select id = "commentCount" resultType="int">
      select count(*) from Re_Comment
     </select>
    
     <update id ="commentUpdate" parameterType="LostComVO">
      update Re_Comment set Com_Content = #{Com_Content} WHERE Com_Num = #{Com_Num}
     </update>
     
     <delete id="commentDelete" parameterType="int">
     {CALL
     	BEGIN
     	DELETE FROM re_comment WHERE com_num = #{com_num};
	 	DELETE FROM reply WHERE com_num = #{com_num};
	 	END
     }
     </delete>
     
     <!-- 동준 대댓글 -->
     <insert id="replyInsert" parameterType="replyVO">
        <selectKey keyProperty="re_num" order="BEFORE" resultType="int">
            select nvl(max(re_Num), 0)+1 from reply
        </selectKey>  
          insert into reply (re_num,re_content,re_date,id,com_num,lost_postnum)
          values(#{re_num},#{re_content},sysdate,#{id},#{com_num},#{lost_postnum})
     </insert>
     
    <select id ="replyList"  resultType="replyVO">
      select * from reply order by re_num    
   </select>
   <delete id ="replyDelete">
      delete from reply where re_num = #{re_num}    
   </delete>
   <update id="replyUpdate">
   	update reply set re_Content = #{re_content} WHERE re_Num = #{re_num}
   </update>
    <!-- 동준 대댓글  끝-->
    <insert id="pet_commentInsert" parameterType="LostComVO">
        <selectKey keyProperty="Com_Num" order="BEFORE" resultType="int">
            select nvl(max(Com_Num), 0)+1 from pet_Comment
        </selectKey>  
          insert into pet_Comment (Com_Num, Lost_PostNum, Com_Content, Id, Com_Date, Secret_Com)
          values(#{Com_Num},#{Lost_PostNum},#{Com_Content},#{Id},sysdate,#{Secret_Com})
     </insert>
    
     <select id ="pet_commentList" parameterType="int" resultType="LostComVO">
      select * from pet_Comment where Lost_PostNum = #{Lost_PostNum} order by Com_Num desc
     </select>
	 
	 <select id = "pet_commentCount" resultType="int">
      select count(*) from pet_Comment
     </select>
    
     <update id ="pet_commentUpdate" parameterType="LostComVO">
      update pet_Comment set Com_Content = #{Com_Content} WHERE Com_Num = #{Com_Num}
     </update>
     
     <delete id="pet_commentDelete" parameterType="int">
      {CALL
     	BEGIN
     	DELETE FROM pet_comment WHERE com_num = #{com_num};
	 	DELETE FROM pet_reply WHERE com_num = #{com_num};
	 	END
     }
     </delete>
     
     <!-- 동준 대댓글 -->
     <insert id="pet_replyInsert" parameterType="replyVO">
        <selectKey keyProperty="re_num" order="BEFORE" resultType="int">
            select nvl(max(re_Num), 0)+1 from pet_reply
        </selectKey>  
          insert into pet_reply (re_num,re_content,re_date,id,com_num,Pet_PostNum)
          values(#{re_num},#{re_content},sysdate,#{id},#{com_num},#{pet_postnum})
     </insert>
     
    <select id ="pet_replyList"  resultType="replyVO">
      select * from pet_reply order by re_num    
   </select>
   <delete id ="pet_replyDelete">
      delete from pet_reply where re_num = #{re_num}    
   </delete>
   <update id="pet_replyUpdate">
   	update pet_reply set re_content = #{re_content} WHERE re_Num = #{re_num}
   </update>
    <!-- 동준 대댓글  끝-->
    <!-- 인덱스페이지 사례금 상위 5개  -->
    <select id="gethighsetLostPay" resultType="BoardVO">
    	select * from ( select * from lostpost order by lost_pay desc) where <![CDATA[ rownum <= 5 ]]>
    </select>
        <select id="gethighsetPetPay" resultType="PetVO">
    	select * from ( select * from petpost order by pet_pay desc) where <![CDATA[ rownum <= 5 ]]>
    </select>
    
  
    <update id="addPayBoardNum" parameterType="BoardVO" >
    	update pay set lost_postnum = #{Lost_PostNum} where paycode = #{PayCode}
    </update>
    
    <select id="getPostNum" parameterType="BoardVO" resultType="BoardVO">
    	SELECT lost_postnum from lostpost where paycode = #{PayCode}
    </select>
    
    <update id="addPayPetBoardNum" parameterType="PetVO" >
    	update pay set Pet_PostNum = #{Pet_PostNum} where paycode = #{PayCode}
    </update>
    
    <select id="getPetPostNum" parameterType="BoardVO" resultType="PetVO">
    	SELECT Pet_PostNum from petpost where paycode = #{PayCode}
    </select>
    
    <select id="getCommentList" resultType="ComVO">
    	select id, re_comment.com_content as re_content, com_date, com_num, lost_postnum from re_comment where re_comment.id = #{id}
			union
			select id, re_content, re_date as com_date, com_num, lost_postnum from 
        (select re_comment.lost_postnum, reply.re_content, reply.re_date, reply.id, reply.com_num, reply.re_num 
            from re_comment, reply 
            where re_comment.com_num = reply.com_num and reply.id = #{id})
		where id = #{id}
    </select>
    
    <select id="getPetCommentList" resultType="ComVO">
    	select id, pet_comment.com_content as re_content, com_date, com_num, lost_postnum from pet_comment where pet_comment.id =#{id}
			union
			select id, re_content, re_date as com_date, com_num, lost_postnum from 
        (select pet_comment.lost_postnum, pet_reply.re_content, pet_reply.re_date, pet_reply.id, pet_reply.com_num, pet_reply.re_num 
            from pet_comment, pet_reply 
            where pet_comment.com_num = pet_reply.com_num and pet_reply.id = #{id})
		where id =#{id}
    </select>
    
    <delete id="deleteMember">
     	DELETE FROM member WHERE id = #{id} and pw = #{pw}
    </delete>
</mapper>